mediator 中介者 模式，降低类与类之间偶合的，

如：user1 和 user2 直接依赖，如果 user1 问题问题 user2 也会
跟着出现问题。所以应用一个 mediator 中介者 的类，就是第三个类，

一个 mediator 接口，它的实现类里面分别有 user1 和 user2 的对象。

让它们在 mediator 的实现里来依赖。



http://blog.csdn.net/bihansheng2010/article/details/50524379
经典文章必须研究透啊，


// ====================================================================

设计模式，只需要把 抽象层的，类型搞好，看懂，到时具体干活时，只需增加实现类或者是指定用哪个实现类就好。
    注：在增加实现类时，可能需要实现某个接口或者是继承某个类。

 一个模式敲完了，必须要结合到，它对应的类图，思考思考？？？？？


建造者模式：创建的对象是比较细的，是一个按照需要来创建出来的
    一个对象，建造者 关注的是一个对象的 构造过程，抽象工厂和工厂
    方法都是直接创建一个产品出来。


设计模式的
    1.创建类。
    2.结构类。
        它是一个个类组合起来形成更强大的功能。
    3.行为类。



装饰者模式，注重的是对 一个类里面的 功能进行加强。
代理模式，注重的是 对这个类的，访问，什么东东才可以访问它。


装饰者，装饰的类 必须与自己有相同的 父类或者是接口。



策略模式关心的是算法是否可以相互替换


重点是：它是如何实现分隔的？？是如何实现解偶的，是什么方式，这一层是重点。


baidu：23种设计模式的应用场景。


设计模式：是有很多相似的地方，但是它们分析的角度是不一样的。
    所以是选用设计模式时：要先找出，你的业务关注的是什么，在考虑用什么模式来实现。



看到什么委托，可能就是一个接口或者是一个父类，然后用不同实现类，就可以到达 委托的作用，？？？


策略模式 ：和许多模式相同了。




//======================================================================================



http://blog.csdn.net/u013256816/article/details/51245096






1.单一原则。
2.里氏替换原则。
3.接口




















